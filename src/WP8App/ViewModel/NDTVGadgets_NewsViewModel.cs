// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of NDTVGadgets_News ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class NDTVGadgets_NewsViewModel : ViewModelsBase.VMBase, IViewModels.INDTVGadgets_NewsViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.INDTVGadgets_s1 _nDTVGadgets_s1;
		private readonly Repositories.ICNET_s2 _cNET_s2;
		private readonly Repositories.IGeekyGadgets_s3 _geekyGadgets_s3;
		private readonly Repositories.ICnetNEWS_s4 _cnetNEWS_s4;
		private readonly Repositories.IVideos_s5 _videos_s5;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="NDTVGadgets_NewsViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="nDTVGadgets_s1">The N D T V Gadgets_s1.</param>
        /// <param name="cNET_s2">The C N E T_s2.</param>
        /// <param name="geekyGadgets_s3">The Geeky Gadgets_s3.</param>
        /// <param name="cnetNEWS_s4">The Cnet N E W S_s4.</param>
        /// <param name="videos_s5">The Videos_s5.</param>
        public NDTVGadgets_NewsViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ILockScreenService lockScreenService, Repositories.INDTVGadgets_s1 nDTVGadgets_s1, Repositories.ICNET_s2 cNET_s2, Repositories.IGeekyGadgets_s3 geekyGadgets_s3, Repositories.ICnetNEWS_s4 cnetNEWS_s4, Repositories.IVideos_s5 videos_s5)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_nDTVGadgets_s1 = nDTVGadgets_s1;
			_cNET_s2 = cNET_s2;
			_geekyGadgets_s3 = geekyGadgets_s3;
			_cnetNEWS_s4 = cnetNEWS_s4;
			_videos_s5 = videos_s5;
        }
		
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _nDTVGadgets_NewsListControlCollection;

        /// <summary>
        /// NDTVGadgets_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> NDTVGadgets_NewsListControlCollection
        {
            get
            {
				
                if(_nDTVGadgets_NewsListControlCollection == null)
					GetNDTVGadgets_NewsListControlCollectionData();
				return _nDTVGadgets_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _nDTVGadgets_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedNDTVGadgets_NewsListControlCollection;

        /// <summary>
        /// SelectedNDTVGadgets_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedNDTVGadgets_NewsListControlCollection
        {
            get
            {
				return _selectedNDTVGadgets_NewsListControlCollection;
            }
            set
            {
                _selectedNDTVGadgets_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.INDTVGadgets_DetailViewModel>(_selectedNDTVGadgets_NewsListControlCollection);
            }
        }
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _cNET_NewsListControlCollection;

        /// <summary>
        /// CNET_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> CNET_NewsListControlCollection
        {
            get
            {
				
                if(_cNET_NewsListControlCollection == null)
					GetCNET_NewsListControlCollectionData();
				return _cNET_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _cNET_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedCNET_NewsListControlCollection;

        /// <summary>
        /// SelectedCNET_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedCNET_NewsListControlCollection
        {
            get
            {
				return _selectedCNET_NewsListControlCollection;
            }
            set
            {
                _selectedCNET_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.ICNET_DetailViewModel>(_selectedCNET_NewsListControlCollection);
            }
        }
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _geekyGadgets_NewsListControlCollection;

        /// <summary>
        /// GeekyGadgets_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> GeekyGadgets_NewsListControlCollection
        {
            get
            {
				
                if(_geekyGadgets_NewsListControlCollection == null)
					GetGeekyGadgets_NewsListControlCollectionData();
				return _geekyGadgets_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _geekyGadgets_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedGeekyGadgets_NewsListControlCollection;

        /// <summary>
        /// SelectedGeekyGadgets_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedGeekyGadgets_NewsListControlCollection
        {
            get
            {
				return _selectedGeekyGadgets_NewsListControlCollection;
            }
            set
            {
                _selectedGeekyGadgets_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IGeekyGadgets_DetailViewModel>(_selectedGeekyGadgets_NewsListControlCollection);
            }
        }
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _cnetNEWS_NewsListControlCollection;

        /// <summary>
        /// CnetNEWS_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> CnetNEWS_NewsListControlCollection
        {
            get
            {
				
                if(_cnetNEWS_NewsListControlCollection == null)
					GetCnetNEWS_NewsListControlCollectionData();
				return _cnetNEWS_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _cnetNEWS_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedCnetNEWS_NewsListControlCollection;

        /// <summary>
        /// SelectedCnetNEWS_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedCnetNEWS_NewsListControlCollection
        {
            get
            {
				return _selectedCnetNEWS_NewsListControlCollection;
            }
            set
            {
                _selectedCnetNEWS_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.ICnetNEWS_DetailViewModel>(_selectedCnetNEWS_NewsListControlCollection);
            }
        }
	
		private ObservableCollection<EntitiesBase.YouTubeVideo> _videos_VideosListControlCollection;

        /// <summary>
        /// Videos_VideosListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.YouTubeVideo> Videos_VideosListControlCollection
        {
            get
            {
				
                if(_videos_VideosListControlCollection == null)
					GetVideos_VideosListControlCollectionData();
				return _videos_VideosListControlCollection;     
            }
            set
            {
                SetProperty(ref _videos_VideosListControlCollection, value);
            }
        }
	
		private int _videos_VideosListControlCollectionPageNumber;

        /// <summary>
        /// Videos_VideosListControlCollectionPageNumber property.
        /// </summary>		
        public int Videos_VideosListControlCollectionPageNumber
        {
            get
            {
				return _videos_VideosListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _videos_VideosListControlCollectionPageNumber, value);
            }
        }
	
		private EntitiesBase.YouTubeVideo _selectedVideos_VideosListControlCollection;

        /// <summary>
        /// SelectedVideos_VideosListControlCollection property.
        /// </summary>		
        public EntitiesBase.YouTubeVideo SelectedVideos_VideosListControlCollection
        {
            get
            {
				return _selectedVideos_VideosListControlCollection;
            }
            set
            {
                _selectedVideos_VideosListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IVideos_DetailVideosViewModel>(_selectedVideos_VideosListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshNDTVGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshNDTVGadgets_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingNDTVGadgets_NewsListControlCollection = true;
				var items = await  _nDTVGadgets_s1.Refresh();
				NDTVGadgets_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				NDTVGadgets_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingNDTVGadgets_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingNDTVGadgets_NewsListControlCollection;
		
        public bool LoadingNDTVGadgets_NewsListControlCollection
        {
            get { return _loadingNDTVGadgets_NewsListControlCollection; }
            set { SetProperty(ref _loadingNDTVGadgets_NewsListControlCollection, value); }
        }

        private ICommand _refreshNDTVGadgets_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshNDTVGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshNDTVGadgets_NewsListControlCollectionCommand
        {
            get { return _refreshNDTVGadgets_NewsListControlCollectionCommand = _refreshNDTVGadgets_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshNDTVGadgets_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetNDTVGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetNDTVGadgets_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetNDTVGadgets_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getNDTVGadgets_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetNDTVGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetNDTVGadgets_NewsListControlCollectionCommand
        {
            get { return _getNDTVGadgets_NewsListControlCollectionCommand = _getNDTVGadgets_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetNDTVGadgets_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshCNET_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshCNET_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingCNET_NewsListControlCollection = true;
				var items = await  _cNET_s2.Refresh();
				CNET_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				CNET_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingCNET_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingCNET_NewsListControlCollection;
		
        public bool LoadingCNET_NewsListControlCollection
        {
            get { return _loadingCNET_NewsListControlCollection; }
            set { SetProperty(ref _loadingCNET_NewsListControlCollection, value); }
        }

        private ICommand _refreshCNET_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshCNET_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshCNET_NewsListControlCollectionCommand
        {
            get { return _refreshCNET_NewsListControlCollectionCommand = _refreshCNET_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshCNET_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetCNET_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetCNET_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetCNET_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getCNET_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetCNET_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetCNET_NewsListControlCollectionCommand
        {
            get { return _getCNET_NewsListControlCollectionCommand = _getCNET_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetCNET_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshGeekyGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshGeekyGadgets_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingGeekyGadgets_NewsListControlCollection = true;
				var items = await  _geekyGadgets_s3.Refresh();
				GeekyGadgets_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				GeekyGadgets_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingGeekyGadgets_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingGeekyGadgets_NewsListControlCollection;
		
        public bool LoadingGeekyGadgets_NewsListControlCollection
        {
            get { return _loadingGeekyGadgets_NewsListControlCollection; }
            set { SetProperty(ref _loadingGeekyGadgets_NewsListControlCollection, value); }
        }

        private ICommand _refreshGeekyGadgets_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshGeekyGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshGeekyGadgets_NewsListControlCollectionCommand
        {
            get { return _refreshGeekyGadgets_NewsListControlCollectionCommand = _refreshGeekyGadgets_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshGeekyGadgets_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetGeekyGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetGeekyGadgets_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetGeekyGadgets_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getGeekyGadgets_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetGeekyGadgets_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetGeekyGadgets_NewsListControlCollectionCommand
        {
            get { return _getGeekyGadgets_NewsListControlCollectionCommand = _getGeekyGadgets_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetGeekyGadgets_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshCnetNEWS_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshCnetNEWS_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingCnetNEWS_NewsListControlCollection = true;
				var items = await  _cnetNEWS_s4.Refresh();
				CnetNEWS_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				CnetNEWS_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingCnetNEWS_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingCnetNEWS_NewsListControlCollection;
		
        public bool LoadingCnetNEWS_NewsListControlCollection
        {
            get { return _loadingCnetNEWS_NewsListControlCollection; }
            set { SetProperty(ref _loadingCnetNEWS_NewsListControlCollection, value); }
        }

        private ICommand _refreshCnetNEWS_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshCnetNEWS_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshCnetNEWS_NewsListControlCollectionCommand
        {
            get { return _refreshCnetNEWS_NewsListControlCollectionCommand = _refreshCnetNEWS_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshCnetNEWS_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetCnetNEWS_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetCnetNEWS_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetCnetNEWS_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getCnetNEWS_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetCnetNEWS_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetCnetNEWS_NewsListControlCollectionCommand
        {
            get { return _getCnetNEWS_NewsListControlCollectionCommand = _getCnetNEWS_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetCnetNEWS_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshVideos_VideosListControlCollectionCommand command.
        /// </summary>
        public async void RefreshVideos_VideosListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingVideos_VideosListControlCollection = true;
				var items = await  _videos_s5.Refresh();
				Videos_VideosListControlCollection = items;
				Videos_VideosListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Videos_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingVideos_VideosListControlCollection = false;
			}
        }
		
		
        private bool _loadingVideos_VideosListControlCollection;
		
        public bool LoadingVideos_VideosListControlCollection
        {
            get { return _loadingVideos_VideosListControlCollection; }
            set { SetProperty(ref _loadingVideos_VideosListControlCollection, value); }
        }

        private ICommand _refreshVideos_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshVideos_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshVideos_VideosListControlCollectionCommand
        {
            get { return _refreshVideos_VideosListControlCollectionCommand = _refreshVideos_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshVideos_VideosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetVideos_VideosListControlCollectionCommand command.
        /// </summary>
        public  void GetVideos_VideosListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetVideos_VideosListControlCollectionData(pageNumber);
        }
		

        private ICommand _getVideos_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the GetVideos_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand GetVideos_VideosListControlCollectionCommand
        {
            get { return _getVideos_VideosListControlCollectionCommand = _getVideos_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetVideos_VideosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("Item-706dff7e-0f25-4246-887e-496f4d715792.png");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetNDTVGadgets_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingNDTVGadgets_NewsListControlCollection = true;
			
				var items = await _nDTVGadgets_s1.GetData();
                NDTVGadgets_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				NDTVGadgets_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingNDTVGadgets_NewsListControlCollection = false;
			}
		}

        private async void GetCNET_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingCNET_NewsListControlCollection = true;
			
				var items = await _cNET_s2.GetData();
                CNET_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				CNET_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingCNET_NewsListControlCollection = false;
			}
		}

        private async void GetGeekyGadgets_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingGeekyGadgets_NewsListControlCollection = true;
			
				var items = await _geekyGadgets_s3.GetData();
                GeekyGadgets_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				GeekyGadgets_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingGeekyGadgets_NewsListControlCollection = false;
			}
		}

        private async void GetCnetNEWS_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingCnetNEWS_NewsListControlCollection = true;
			
				var items = await _cnetNEWS_s4.GetData();
                CnetNEWS_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				CnetNEWS_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingCnetNEWS_NewsListControlCollection = false;
			}
		}

        private async void GetVideos_VideosListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingVideos_VideosListControlCollection = true;
				Videos_VideosListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _videos_s5.GetData(pageNumber);
                    Videos_VideosListControlCollection = items;
				}
                else   
				{
					var items = await _videos_s5.GetData(pageNumber);
                    foreach (var item in items)                    
                        Videos_VideosListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Videos_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingVideos_VideosListControlCollection = false;
			}
		}
    }
}
